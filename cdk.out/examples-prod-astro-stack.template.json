{
 "Resources": {
  "HostingHostingBucketLogsBucketED273DD3": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "AccessControl": "LogDeliveryWrite",
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "examples-astro-prod-hosting-logs",
    "OwnershipControls": {
     "Rules": [
      {
       "ObjectOwnership": "ObjectWriter"
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Hosting/HostingBucketLogsBucket/Resource"
   }
  },
  "HostingHostingBucketLogsBucketPolicy70D53233": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "HostingHostingBucketLogsBucketED273DD3"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "HostingHostingBucketLogsBucketED273DD3",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "HostingHostingBucketLogsBucketED273DD3",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "HostingHostingBucketLogsBucketED273DD3",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "HostingHostingBucketLogsBucketED273DD3",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Hosting/HostingBucketLogsBucket/Policy/Resource"
   }
  },
  "HostingHostingBucketLogsBucketAutoDeleteObjectsCustomResource03B161E6": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "HostingHostingBucketLogsBucketED273DD3"
    }
   },
   "DependsOn": [
    "HostingHostingBucketLogsBucketPolicy70D53233"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Hosting/HostingBucketLogsBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "HostingHostingBucketA9EF4AFD": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "examples-astro-prod-hosting",
    "LoggingConfiguration": {
     "DestinationBucketName": {
      "Ref": "HostingHostingBucketLogsBucketED273DD3"
     }
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Hosting/HostingBucket/Resource"
   }
  },
  "HostingHostingBucketPolicy26C86596": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "HostingHostingBucketA9EF4AFD"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "HostingHostingBucketA9EF4AFD",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "HostingHostingBucketA9EF4AFD",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "HostingHostingBucketA9EF4AFD",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "HostingHostingBucketA9EF4AFD",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "CanonicalUser": {
         "Fn::GetAtt": [
          "HostingCloudFrontDistributionOrigin1S3Origin7146519B",
          "S3CanonicalUserId"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "HostingHostingBucketA9EF4AFD",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:ListBucket",
        "s3:GetObject"
       ],
       "Condition": {
        "StringEquals": {
         "AWS:SourceArn": {
          "Fn::Join": [
           "",
           [
            "arn:aws:cloudfront::",
            {
             "Ref": "AWS::AccountId"
            },
            ":distribution/",
            {
             "Ref": "HostingCloudFrontDistributionAD417CDA"
            }
           ]
          ]
         }
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Service": "cloudfront.amazonaws.com"
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "HostingHostingBucketA9EF4AFD",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      },
      {
       "Action": "s3:PutObject",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "PipelineRoleB27FAA37",
          "Arn"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "HostingHostingBucketA9EF4AFD",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Hosting/HostingBucket/Policy/Resource",
    "cfn_nag": {
     "rules_to_suppress": [
      {
       "id": "F16",
       "reason": "Public website bucket policy requires a wildcard principal"
      }
     ]
    }
   }
  },
  "HostingHostingBucketAutoDeleteObjectsCustomResource870BE44C": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "HostingHostingBucketA9EF4AFD"
    }
   },
   "DependsOn": [
    "HostingHostingBucketPolicy26C86596"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Hosting/HostingBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "HostingAccessLogsBucket0615B41A": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "examples-astro-prod-access-logs",
    "OwnershipControls": {
     "Rules": [
      {
       "ObjectOwnership": "ObjectWriter"
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Hosting/AccessLogsBucket/Resource"
   }
  },
  "HostingAccessLogsBucketPolicy32C91A8F": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "HostingAccessLogsBucket0615B41A"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "HostingAccessLogsBucket0615B41A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "HostingAccessLogsBucket0615B41A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "HostingAccessLogsBucket0615B41A",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "HostingAccessLogsBucket0615B41A",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Hosting/AccessLogsBucket/Policy/Resource"
   }
  },
  "HostingAccessLogsBucketAutoDeleteObjectsCustomResourceE24484E2": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "HostingAccessLogsBucket0615B41A"
    }
   },
   "DependsOn": [
    "HostingAccessLogsBucketPolicy32C91A8F"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Hosting/AccessLogsBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "HostingDefaultCachePolicyAC9775E6": {
   "Type": "AWS::CloudFront::CachePolicy",
   "Properties": {
    "CachePolicyConfig": {
     "Comment": {
      "Fn::Join": [
       "",
       [
        "Default policy - ",
        {
         "Ref": "AWS::StackName"
        },
        "-",
        {
         "Ref": "AWS::Region"
        }
       ]
      ]
     },
     "DefaultTTL": 31536000,
     "MaxTTL": 31536000,
     "MinTTL": 31536000,
     "Name": {
      "Fn::Join": [
       "",
       [
        "CachePolicy",
        {
         "Ref": "AWS::StackName"
        },
        "-",
        {
         "Ref": "AWS::Region"
        }
       ]
      ]
     },
     "ParametersInCacheKeyAndForwardedToOrigin": {
      "CookiesConfig": {
       "CookieBehavior": "none"
      },
      "EnableAcceptEncodingBrotli": true,
      "EnableAcceptEncodingGzip": true,
      "HeadersConfig": {
       "HeaderBehavior": "none"
      },
      "QueryStringsConfig": {
       "QueryStringBehavior": "none"
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Hosting/DefaultCachePolicy/Resource"
   }
  },
  "HostingImagesCachePolicy7EED2E8D": {
   "Type": "AWS::CloudFront::CachePolicy",
   "Properties": {
    "CachePolicyConfig": {
     "Comment": {
      "Fn::Join": [
       "",
       [
        "Images cache policy - ",
        {
         "Ref": "AWS::StackName"
        },
        "-",
        {
         "Ref": "AWS::Region"
        }
       ]
      ]
     },
     "DefaultTTL": 31536000,
     "MaxTTL": 31536000,
     "MinTTL": 31536000,
     "Name": {
      "Fn::Join": [
       "",
       [
        "ImagesCachePolicy",
        {
         "Ref": "AWS::StackName"
        },
        "-",
        {
         "Ref": "AWS::Region"
        }
       ]
      ]
     },
     "ParametersInCacheKeyAndForwardedToOrigin": {
      "CookiesConfig": {
       "CookieBehavior": "none"
      },
      "EnableAcceptEncodingBrotli": false,
      "EnableAcceptEncodingGzip": false,
      "HeadersConfig": {
       "HeaderBehavior": "none"
      },
      "QueryStringsConfig": {
       "QueryStringBehavior": "none"
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Hosting/ImagesCachePolicy/Resource"
   }
  },
  "HostingstaticAssetsCachePolicy3B708A2A": {
   "Type": "AWS::CloudFront::CachePolicy",
   "Properties": {
    "CachePolicyConfig": {
     "Comment": {
      "Fn::Join": [
       "",
       [
        "Static assets cache policy - ",
        {
         "Ref": "AWS::StackName"
        },
        "-",
        {
         "Ref": "AWS::Region"
        }
       ]
      ]
     },
     "DefaultTTL": 31536000,
     "MaxTTL": 31536000,
     "MinTTL": 31536000,
     "Name": {
      "Fn::Join": [
       "",
       [
        "StaticAssetsCachePolicy",
        {
         "Ref": "AWS::StackName"
        },
        "-",
        {
         "Ref": "AWS::Region"
        }
       ]
      ]
     },
     "ParametersInCacheKeyAndForwardedToOrigin": {
      "CookiesConfig": {
       "CookieBehavior": "none"
      },
      "EnableAcceptEncodingBrotli": false,
      "EnableAcceptEncodingGzip": false,
      "HeadersConfig": {
       "HeaderBehavior": "none"
      },
      "QueryStringsConfig": {
       "QueryStringBehavior": "none"
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Hosting/staticAssetsCachePolicy/Resource"
   }
  },
  "HostingResponseHeadersPolicy97C0645C": {
   "Type": "AWS::CloudFront::ResponseHeadersPolicy",
   "Properties": {
    "ResponseHeadersPolicyConfig": {
     "Comment": {
      "Fn::Join": [
       "",
       [
        "ResponseHeadersPolicy",
        {
         "Ref": "AWS::StackName"
        },
        "-",
        {
         "Ref": "AWS::Region"
        }
       ]
      ]
     },
     "Name": {
      "Fn::Join": [
       "",
       [
        "ResponseHeadersPolicy",
        {
         "Ref": "AWS::StackName"
        },
        "-",
        {
         "Ref": "AWS::Region"
        }
       ]
      ]
     },
     "RemoveHeadersConfig": {
      "Items": [
       {
        "Header": "age"
       },
       {
        "Header": "date"
       }
      ]
     },
     "SecurityHeadersConfig": {
      "ContentTypeOptions": {
       "Override": true
      },
      "FrameOptions": {
       "FrameOption": "DENY",
       "Override": true
      },
      "ReferrerPolicy": {
       "Override": false,
       "ReferrerPolicy": "strict-origin-when-cross-origin"
      },
      "StrictTransportSecurity": {
       "AccessControlMaxAgeSec": 31536000,
       "IncludeSubdomains": true,
       "Override": true
      },
      "XSSProtection": {
       "ModeBlock": true,
       "Override": true,
       "Protection": true
      }
     }
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Hosting/ResponseHeadersPolicy/Resource"
   }
  },
  "HostingSetHttpSecurityHeadersFE728A8D": {
   "Type": "AWS::CloudFront::Function",
   "Properties": {
    "AutoPublish": true,
    "FunctionCode": "function handler(event) { var response = event.response; var headers = response.headers; headers['strict-transport-security'] = { value: 'max-age=63072000; includeSubdomains; preload'}; headers['content-security-policy'] = { value: \"default-src 'none'; img-src 'self'; script-src 'self'; style-src 'self'; object-src 'none'\"}; headers['x-content-type-options'] = { value: 'nosniff'}; headers['x-frame-options'] = {value: 'DENY'}; headers['x-xss-protection'] = {value: '1; mode=block'}; return response; }",
    "FunctionConfig": {
     "Comment": "SetHttpSecurityHeadersc8e1c9c6e80e9633e4e7329d11cc486ceed9023c8d",
     "Runtime": "cloudfront-js-1.0"
    },
    "Name": "SetHttpSecurityHeadersc8e1c9c6e80e9633e4e7329d11cc486ceed9023c8d"
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Hosting/SetHttpSecurityHeaders/Resource"
   }
  },
  "HostingCloudFrontOac3C483F7A": {
   "Type": "AWS::CloudFront::OriginAccessControl",
   "Properties": {
    "OriginAccessControlConfig": {
     "Description": "Origin access control provisioned by aws-cloudfront-s3",
     "Name": {
      "Fn::Join": [
       "",
       [
        "aws-cloudfront-s3-examd-cdn-",
        {
         "Fn::Select": [
          2,
          {
           "Fn::Split": [
            "/",
            {
             "Ref": "AWS::StackId"
            }
           ]
          }
         ]
        }
       ]
      ]
     },
     "OriginAccessControlOriginType": "s3",
     "SigningBehavior": "always",
     "SigningProtocol": "sigv4"
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Hosting/CloudFrontOac"
   }
  },
  "HostingCloudFrontDistributionOrigin1S3Origin7146519B": {
   "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
   "Properties": {
    "CloudFrontOriginAccessIdentityConfig": {
     "Comment": "Identity for examplesprodastrostackHostingCloudFrontDistributionOrigin106E73317"
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Hosting/CloudFrontDistribution/Origin1/S3Origin/Resource"
   }
  },
  "HostingCloudFrontDistributionAD417CDA": {
   "Type": "AWS::CloudFront::Distribution",
   "Properties": {
    "DistributionConfig": {
     "CacheBehaviors": [
      {
       "AllowedMethods": [
        "GET",
        "HEAD"
       ],
       "CachePolicyId": {
        "Ref": "HostingImagesCachePolicy7EED2E8D"
       },
       "Compress": true,
       "PathPattern": "*.jpg",
       "ResponseHeadersPolicyId": {
        "Ref": "HostingResponseHeadersPolicy97C0645C"
       },
       "TargetOriginId": "examplesprodastrostackHostingCloudFrontDistributionOrigin106E73317",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD"
       ],
       "CachePolicyId": {
        "Ref": "HostingImagesCachePolicy7EED2E8D"
       },
       "Compress": true,
       "PathPattern": "*.jpeg",
       "ResponseHeadersPolicyId": {
        "Ref": "HostingResponseHeadersPolicy97C0645C"
       },
       "TargetOriginId": "examplesprodastrostackHostingCloudFrontDistributionOrigin106E73317",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD"
       ],
       "CachePolicyId": {
        "Ref": "HostingImagesCachePolicy7EED2E8D"
       },
       "Compress": true,
       "PathPattern": "*.png",
       "ResponseHeadersPolicyId": {
        "Ref": "HostingResponseHeadersPolicy97C0645C"
       },
       "TargetOriginId": "examplesprodastrostackHostingCloudFrontDistributionOrigin106E73317",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD"
       ],
       "CachePolicyId": {
        "Ref": "HostingImagesCachePolicy7EED2E8D"
       },
       "Compress": true,
       "PathPattern": "*.gif",
       "ResponseHeadersPolicyId": {
        "Ref": "HostingResponseHeadersPolicy97C0645C"
       },
       "TargetOriginId": "examplesprodastrostackHostingCloudFrontDistributionOrigin106E73317",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD"
       ],
       "CachePolicyId": {
        "Ref": "HostingImagesCachePolicy7EED2E8D"
       },
       "Compress": true,
       "PathPattern": "*.bmp",
       "ResponseHeadersPolicyId": {
        "Ref": "HostingResponseHeadersPolicy97C0645C"
       },
       "TargetOriginId": "examplesprodastrostackHostingCloudFrontDistributionOrigin106E73317",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD"
       ],
       "CachePolicyId": {
        "Ref": "HostingImagesCachePolicy7EED2E8D"
       },
       "Compress": true,
       "PathPattern": "*.tiff",
       "ResponseHeadersPolicyId": {
        "Ref": "HostingResponseHeadersPolicy97C0645C"
       },
       "TargetOriginId": "examplesprodastrostackHostingCloudFrontDistributionOrigin106E73317",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD"
       ],
       "CachePolicyId": {
        "Ref": "HostingImagesCachePolicy7EED2E8D"
       },
       "Compress": true,
       "PathPattern": "*.ico",
       "ResponseHeadersPolicyId": {
        "Ref": "HostingResponseHeadersPolicy97C0645C"
       },
       "TargetOriginId": "examplesprodastrostackHostingCloudFrontDistributionOrigin106E73317",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD"
       ],
       "CachePolicyId": {
        "Ref": "HostingstaticAssetsCachePolicy3B708A2A"
       },
       "Compress": true,
       "PathPattern": "*.js",
       "ResponseHeadersPolicyId": {
        "Ref": "HostingResponseHeadersPolicy97C0645C"
       },
       "TargetOriginId": "examplesprodastrostackHostingCloudFrontDistributionOrigin106E73317",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD"
       ],
       "CachePolicyId": {
        "Ref": "HostingstaticAssetsCachePolicy3B708A2A"
       },
       "Compress": true,
       "PathPattern": "*.css",
       "ResponseHeadersPolicyId": {
        "Ref": "HostingResponseHeadersPolicy97C0645C"
       },
       "TargetOriginId": "examplesprodastrostackHostingCloudFrontDistributionOrigin106E73317",
       "ViewerProtocolPolicy": "redirect-to-https"
      },
      {
       "AllowedMethods": [
        "GET",
        "HEAD"
       ],
       "CachePolicyId": {
        "Ref": "HostingstaticAssetsCachePolicy3B708A2A"
       },
       "Compress": true,
       "PathPattern": "*.html",
       "ResponseHeadersPolicyId": {
        "Ref": "HostingResponseHeadersPolicy97C0645C"
       },
       "TargetOriginId": "examplesprodastrostackHostingCloudFrontDistributionOrigin106E73317",
       "ViewerProtocolPolicy": "redirect-to-https"
      }
     ],
     "Comment": {
      "Fn::Join": [
       "",
       [
        "Stack name: ",
        {
         "Ref": "AWS::StackName"
        }
       ]
      ]
     },
     "DefaultCacheBehavior": {
      "AllowedMethods": [
       "GET",
       "HEAD"
      ],
      "CachePolicyId": {
       "Ref": "HostingDefaultCachePolicyAC9775E6"
      },
      "Compress": true,
      "FunctionAssociations": [
       {
        "EventType": "viewer-response",
        "FunctionARN": {
         "Fn::GetAtt": [
          "HostingSetHttpSecurityHeadersFE728A8D",
          "FunctionARN"
         ]
        }
       }
      ],
      "ResponseHeadersPolicyId": {
       "Ref": "HostingResponseHeadersPolicy97C0645C"
      },
      "TargetOriginId": "examplesprodastrostackHostingCloudFrontDistributionOrigin106E73317",
      "ViewerProtocolPolicy": "redirect-to-https"
     },
     "DefaultRootObject": "index.html",
     "Enabled": true,
     "HttpVersion": "http2and3",
     "IPV6Enabled": true,
     "Logging": {
      "Bucket": {
       "Fn::GetAtt": [
        "HostingAccessLogsBucket0615B41A",
        "RegionalDomainName"
       ]
      }
     },
     "Origins": [
      {
       "DomainName": {
        "Fn::GetAtt": [
         "HostingHostingBucketA9EF4AFD",
         "RegionalDomainName"
        ]
       },
       "Id": "examplesprodastrostackHostingCloudFrontDistributionOrigin106E73317",
       "S3OriginConfig": {
        "OriginAccessIdentity": {
         "Fn::Join": [
          "",
          [
           "origin-access-identity/cloudfront/",
           {
            "Ref": "HostingCloudFrontDistributionOrigin1S3Origin7146519B"
           }
          ]
         ]
        }
       }
      }
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Hosting/CloudFrontDistribution/Resource",
    "cfn_nag": {
     "rules_to_suppress": [
      {
       "id": "W70",
       "reason": "Since the distribution uses the CloudFront domain name, CloudFront automatically sets the security policy to TLSv1 regardless of the value of MinimumProtocolVersion"
      }
     ]
    }
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role"
   }
  },
  "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-665186350589-us-east-1",
     "S3Key": "faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "index.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      "Arn"
     ]
    },
    "Runtime": "nodejs20.x",
    "Description": {
     "Fn::Join": [
      "",
      [
       "Lambda function for auto-deleting objects in ",
       {
        "Ref": "HostingHostingBucketLogsBucketED273DD3"
       },
       " S3 bucket."
      ]
     ]
    }
   },
   "DependsOn": [
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092"
   ],
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler",
    "aws:asset:path": "asset.faa95a81ae7d7373f3e1f242268f904eb748d8d0fdd306e8a6fe515a1905a7d6",
    "aws:asset:property": "Code"
   }
  },
  "PipelineBuildLogsBucket55CE7123": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "examples-astro-prod-build-logs",
    "OwnershipControls": {
     "Rules": [
      {
       "ObjectOwnership": "ObjectWriter"
      }
     ]
    },
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/BuildLogsBucket/Resource"
   }
  },
  "PipelineBuildLogsBucketPolicy8AB4E8FC": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "PipelineBuildLogsBucket55CE7123"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineBuildLogsBucket55CE7123",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineBuildLogsBucket55CE7123",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineBuildLogsBucket55CE7123",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineBuildLogsBucket55CE7123",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/BuildLogsBucket/Policy/Resource"
   }
  },
  "PipelineBuildLogsBucketAutoDeleteObjectsCustomResourceBC39728B": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "PipelineBuildLogsBucket55CE7123"
    }
   },
   "DependsOn": [
    "PipelineBuildLogsBucketPolicy8AB4E8FC"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/BuildLogsBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "PipelineCodeBuildProjectRole4FFC8613": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/CodeBuildProject/Role/Resource"
   }
  },
  "PipelineCodeBuildProjectRoleDefaultPolicy884C013C": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineBuildLogsBucket55CE7123",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineBuildLogsBucket55CE7123",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:us-east-1:665186350589:log-group:/aws/codebuild/",
           {
            "Ref": "PipelineCodeBuildProject13E6FBC9"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:us-east-1:665186350589:log-group:/aws/codebuild/",
           {
            "Ref": "PipelineCodeBuildProject13E6FBC9"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:us-east-1:665186350589:report-group/",
          {
           "Ref": "PipelineCodeBuildProject13E6FBC9"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": "secretsmanager:GetSecretValue",
       "Effect": "Allow",
       "Resource": "arn:aws:secretsmanager:us-east-1:665186350589:secret:githubpat-0abFlT"
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "HostingHostingBucketA9EF4AFD",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "HostingHostingBucketA9EF4AFD",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineArtifactBucket5F943F51",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineArtifactBucket5F943F51",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineCodeBuildProjectRoleDefaultPolicy884C013C",
    "Roles": [
     {
      "Ref": "PipelineCodeBuildProjectRole4FFC8613"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/CodeBuildProject/Role/DefaultPolicy/Resource"
   }
  },
  "PipelineCodeBuildProject13E6FBC9": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "NO_ARTIFACTS"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "EncryptionKey": "alias/aws/s3",
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_MEDIUM",
     "Image": "aws/codebuild/standard:7.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": true,
     "Type": "LINUX_CONTAINER"
    },
    "LogsConfig": {
     "S3Logs": {
      "Location": {
       "Ref": "PipelineBuildLogsBucket55CE7123"
      },
      "Status": "ENABLED"
     }
    },
    "Name": "examples-astro-prod-buildproject",
    "ServiceRole": {
     "Fn::GetAtt": [
      "PipelineCodeBuildProjectRole4FFC8613",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"runtime-versions\": {\n        \"nodejs\": 18\n      },\n      \"commands\": [\n        \"cd examples/astro/\",\n        \"npm i\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"npx astro build\"\n      ]\n    }\n  },\n  \"artifacts\": {\n    \"files\": [\n      \"**/*\"\n    ],\n    \"base-directory\": \"examples/astro/dist/\"\n  }\n}",
     "GitCloneDepth": 1,
     "Location": "https://github.com/thunder-so/stacks.git",
     "ReportBuildStatus": true,
     "Type": "GITHUB"
    },
    "SourceVersion": "main"
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/CodeBuildProject/Resource"
   }
  },
  "PipelineCloudfrontInvalidationRoleFE9C9D23": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codebuild.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/CloudfrontInvalidationRole/Resource"
   }
  },
  "PipelineCloudfrontInvalidationRoleDefaultPolicy6CF187FB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "cloudfront:CreateInvalidation",
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:aws:cloudfront::665186350589:distribution/",
          {
           "Ref": "HostingCloudFrontDistributionAD417CDA"
          }
         ]
        ]
       }
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:us-east-1:665186350589:log-group:/aws/codebuild/",
           {
            "Ref": "PipelineCloudfrontInvalidationProjectC849EBDD"
           }
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":logs:us-east-1:665186350589:log-group:/aws/codebuild/",
           {
            "Ref": "PipelineCloudfrontInvalidationProjectC849EBDD"
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "codebuild:CreateReportGroup",
        "codebuild:CreateReport",
        "codebuild:UpdateReport",
        "codebuild:BatchPutTestCases",
        "codebuild:BatchPutCodeCoverages"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":codebuild:us-east-1:665186350589:report-group/",
          {
           "Ref": "PipelineCloudfrontInvalidationProjectC849EBDD"
          },
          "-*"
         ]
        ]
       }
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineArtifactBucket5F943F51",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineArtifactBucket5F943F51",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineCloudfrontInvalidationRoleDefaultPolicy6CF187FB",
    "Roles": [
     {
      "Ref": "PipelineCloudfrontInvalidationRoleFE9C9D23"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/CloudfrontInvalidationRole/DefaultPolicy/Resource"
   }
  },
  "PipelineCloudfrontInvalidationProjectC849EBDD": {
   "Type": "AWS::CodeBuild::Project",
   "Properties": {
    "Artifacts": {
     "Type": "NO_ARTIFACTS"
    },
    "Cache": {
     "Type": "NO_CACHE"
    },
    "EncryptionKey": "alias/aws/s3",
    "Environment": {
     "ComputeType": "BUILD_GENERAL1_SMALL",
     "EnvironmentVariables": [
      {
       "Name": "CLOUDFRONT_DISTRIBUTION_ID",
       "Type": "PLAINTEXT",
       "Value": {
        "Ref": "HostingCloudFrontDistributionAD417CDA"
       }
      }
     ],
     "Image": "aws/codebuild/standard:5.0",
     "ImagePullCredentialsType": "CODEBUILD",
     "PrivilegedMode": false,
     "Type": "LINUX_CONTAINER"
    },
    "Name": "examples-astro-prod-CacheInvalidation",
    "ServiceRole": {
     "Fn::GetAtt": [
      "PipelineCloudfrontInvalidationRoleFE9C9D23",
      "Arn"
     ]
    },
    "Source": {
     "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"build\": {\n      \"commands\": [\n        \"aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths \\\"/*\\\"\"\n      ]\n    }\n  }\n}",
     "Type": "NO_SOURCE"
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/CloudfrontInvalidationProject/Resource"
   }
  },
  "PipelineArtifactBucket5F943F51": {
   "Type": "AWS::S3::Bucket",
   "Properties": {
    "BucketEncryption": {
     "ServerSideEncryptionConfiguration": [
      {
       "ServerSideEncryptionByDefault": {
        "SSEAlgorithm": "AES256"
       }
      }
     ]
    },
    "BucketName": "examples-astro-prod-artifacts",
    "PublicAccessBlockConfiguration": {
     "BlockPublicAcls": true,
     "BlockPublicPolicy": true,
     "IgnorePublicAcls": true,
     "RestrictPublicBuckets": true
    },
    "Tags": [
     {
      "Key": "aws-cdk:auto-delete-objects",
      "Value": "true"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/ArtifactBucket/Resource"
   }
  },
  "PipelineArtifactBucketPolicyB4B222DD": {
   "Type": "AWS::S3::BucketPolicy",
   "Properties": {
    "Bucket": {
     "Ref": "PipelineArtifactBucket5F943F51"
    },
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "s3:*",
       "Condition": {
        "Bool": {
         "aws:SecureTransport": "false"
        }
       },
       "Effect": "Deny",
       "Principal": {
        "AWS": "*"
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineArtifactBucket5F943F51",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineArtifactBucket5F943F51",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:PutBucketPolicy",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*"
       ],
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
          "Arn"
         ]
        }
       },
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineArtifactBucket5F943F51",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineArtifactBucket5F943F51",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "s3:GetObject",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::GetAtt": [
          "PipelineRoleB27FAA37",
          "Arn"
         ]
        }
       },
       "Resource": {
        "Fn::Join": [
         "",
         [
          {
           "Fn::GetAtt": [
            "PipelineArtifactBucket5F943F51",
            "Arn"
           ]
          },
          "/*"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/ArtifactBucket/Policy/Resource"
   }
  },
  "PipelineArtifactBucketAutoDeleteObjectsCustomResource90CBA5CD": {
   "Type": "Custom::S3AutoDeleteObjects",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
      "Arn"
     ]
    },
    "BucketName": {
     "Ref": "PipelineArtifactBucket5F943F51"
    }
   },
   "DependsOn": [
    "PipelineArtifactBucketPolicyB4B222DD"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/ArtifactBucket/AutoDeleteObjectsCustomResource/Default"
   }
  },
  "PipelineRoleB27FAA37": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "codepipeline.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/Pipeline/Role/Resource"
   }
  },
  "PipelineRoleDefaultPolicy7BDC1ABB": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*",
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineArtifactBucket5F943F51",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineArtifactBucket5F943F51",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": "secretsmanager:GetSecretValue",
       "Effect": "Allow",
       "Resource": "arn:aws:secretsmanager:us-east-1:665186350589:secret:githubpat-0abFlT"
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "PipelineBuildBuildActionCodePipelineActionRole0541F4F3",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "PipelineDeployDeployActionCodePipelineActionRole060A341B",
         "Arn"
        ]
       }
      },
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "PipelineInvalidateCacheInvalidateActionCodePipelineActionRole74A88171",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineRoleDefaultPolicy7BDC1ABB",
    "Roles": [
     {
      "Ref": "PipelineRoleB27FAA37"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/Pipeline/Role/DefaultPolicy/Resource"
   }
  },
  "Pipeline9850B417": {
   "Type": "AWS::CodePipeline::Pipeline",
   "Properties": {
    "ArtifactStore": {
     "Location": {
      "Ref": "PipelineArtifactBucket5F943F51"
     },
     "Type": "S3"
    },
    "Name": "examples-astro-prod-pipeline",
    "PipelineType": "V2",
    "RoleArn": {
     "Fn::GetAtt": [
      "PipelineRoleB27FAA37",
      "Arn"
     ]
    },
    "Stages": [
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Source",
         "Owner": "ThirdParty",
         "Provider": "GitHub",
         "Version": "1"
        },
        "Configuration": {
         "Owner": "thunder-so",
         "Repo": "stacks",
         "Branch": "main",
         "OAuthToken": "{{resolve:secretsmanager:arn:aws:secretsmanager:us-east-1:665186350589:secret:githubpat-0abFlT:SecretString:::}}",
         "PollForSourceChanges": false
        },
        "Name": "GithubSourceAction",
        "Namespace": "Source_GithubSourceAction_NS",
        "OutputArtifacts": [
         {
          "Name": "Artifact_Source_GithubSourceAction"
         }
        ],
        "RunOrder": 1
       }
      ],
      "Name": "Source"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "PipelineCodeBuildProject13E6FBC9"
         }
        },
        "InputArtifacts": [
         {
          "Name": "Artifact_Source_GithubSourceAction"
         }
        ],
        "Name": "BuildAction",
        "OutputArtifacts": [
         {
          "Name": "Artifact_Build_BuildAction"
         }
        ],
        "RoleArn": {
         "Fn::GetAtt": [
          "PipelineBuildBuildActionCodePipelineActionRole0541F4F3",
          "Arn"
         ]
        },
        "RunOrder": 2
       }
      ],
      "Name": "Build"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Deploy",
         "Owner": "AWS",
         "Provider": "S3",
         "Version": "1"
        },
        "Configuration": {
         "BucketName": {
          "Ref": "HostingHostingBucketA9EF4AFD"
         },
         "Extract": "true"
        },
        "InputArtifacts": [
         {
          "Name": "Artifact_Build_BuildAction"
         }
        ],
        "Name": "DeployAction",
        "RoleArn": {
         "Fn::GetAtt": [
          "PipelineDeployDeployActionCodePipelineActionRole060A341B",
          "Arn"
         ]
        },
        "RunOrder": 3
       }
      ],
      "Name": "Deploy"
     },
     {
      "Actions": [
       {
        "ActionTypeId": {
         "Category": "Build",
         "Owner": "AWS",
         "Provider": "CodeBuild",
         "Version": "1"
        },
        "Configuration": {
         "ProjectName": {
          "Ref": "PipelineCloudfrontInvalidationProjectC849EBDD"
         }
        },
        "InputArtifacts": [
         {
          "Name": "Artifact_Build_BuildAction"
         }
        ],
        "Name": "InvalidateAction",
        "RoleArn": {
         "Fn::GetAtt": [
          "PipelineInvalidateCacheInvalidateActionCodePipelineActionRole74A88171",
          "Arn"
         ]
        },
        "RunOrder": 4
       }
      ],
      "Name": "InvalidateCache"
     }
    ]
   },
   "DependsOn": [
    "PipelineRoleDefaultPolicy7BDC1ABB",
    "PipelineRoleB27FAA37"
   ],
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/Pipeline/Resource"
   }
  },
  "PipelineSourceGithubSourceActionWebhookResource068074FB": {
   "Type": "AWS::CodePipeline::Webhook",
   "Properties": {
    "Authentication": "GITHUB_HMAC",
    "AuthenticationConfiguration": {
     "SecretToken": "{{resolve:secretsmanager:arn:aws:secretsmanager:us-east-1:665186350589:secret:githubpat-0abFlT:SecretString:::}}"
    },
    "Filters": [
     {
      "JsonPath": "$.ref",
      "MatchEquals": "refs/heads/{Branch}"
     }
    ],
    "RegisterWithThirdParty": true,
    "TargetAction": "GithubSourceAction",
    "TargetPipeline": {
     "Ref": "Pipeline9850B417"
    },
    "TargetPipelineVersion": 1
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/Pipeline/Source/GithubSourceAction/WebhookResource"
   }
  },
  "PipelineBuildBuildActionCodePipelineActionRole0541F4F3": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::665186350589:root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/Pipeline/Build/BuildAction/CodePipelineActionRole/Resource"
   }
  },
  "PipelineBuildBuildActionCodePipelineActionRoleDefaultPolicy94B82A9D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild",
        "codebuild:StopBuild"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "PipelineCodeBuildProject13E6FBC9",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineBuildBuildActionCodePipelineActionRoleDefaultPolicy94B82A9D",
    "Roles": [
     {
      "Ref": "PipelineBuildBuildActionCodePipelineActionRole0541F4F3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/Pipeline/Build/BuildAction/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "PipelineDeployDeployActionCodePipelineActionRole060A341B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::665186350589:root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/Pipeline/Deploy/DeployAction/CodePipelineActionRole/Resource"
   }
  },
  "PipelineDeployDeployActionCodePipelineActionRoleDefaultPolicy14CC69AC": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "s3:DeleteObject*",
        "s3:PutObject",
        "s3:PutObjectLegalHold",
        "s3:PutObjectRetention",
        "s3:PutObjectTagging",
        "s3:PutObjectVersionTagging",
        "s3:Abort*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "HostingHostingBucketA9EF4AFD",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "HostingHostingBucketA9EF4AFD",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "s3:GetObject*",
        "s3:GetBucket*",
        "s3:List*"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "PipelineArtifactBucket5F943F51",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "PipelineArtifactBucket5F943F51",
             "Arn"
            ]
           },
           "/*"
          ]
         ]
        }
       ]
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineDeployDeployActionCodePipelineActionRoleDefaultPolicy14CC69AC",
    "Roles": [
     {
      "Ref": "PipelineDeployDeployActionCodePipelineActionRole060A341B"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/Pipeline/Deploy/DeployAction/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "PipelineInvalidateCacheInvalidateActionCodePipelineActionRole74A88171": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::665186350589:root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/Pipeline/InvalidateCache/InvalidateAction/CodePipelineActionRole/Resource"
   }
  },
  "PipelineInvalidateCacheInvalidateActionCodePipelineActionRoleDefaultPolicyF2AC49A9": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "codebuild:BatchGetBuilds",
        "codebuild:StartBuild",
        "codebuild:StopBuild"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "PipelineCloudfrontInvalidationProjectC849EBDD",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "PipelineInvalidateCacheInvalidateActionCodePipelineActionRoleDefaultPolicyF2AC49A9",
    "Roles": [
     {
      "Ref": "PipelineInvalidateCacheInvalidateActionCodePipelineActionRole74A88171"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/Pipeline/Pipeline/InvalidateCache/InvalidateAction/CodePipelineActionRole/DefaultPolicy/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/3WRTW/CMAyGfwv3kNFuaGcoQttpVTnsOKWJAdMSozgBTVH/+9SPrR3aTn5tP7Je26mMydOzXMzUjefaVPMaS7nzSlciWS7u6lHd+CPyo4zroCvwItvbQfUhpxr151ju80bomoLZO7JexkzpI4zgNC2AL2QZXkAZcDxCfze2wWqPZFtiqt8cHtCutAbmjKx3VIsNsndYho6ZAq8GrEffe2ltblub/xHTMY3QZKAMWBsZc0cn0N1FBtkIVGcZC6qhW6GN40Y/lyEDF7xAjRZkzAfVERP9DuWRqGoakQX2dC6AKTgNw20G/auVO7qiAbdWDGLFDH7n1QHtQXwTjUiWyd2HJ/MaYcmAPPHDNV3IJJXp7MSIcxesxzPIoo9f/a82S0ECAAA="
   },
   "Metadata": {
    "aws:cdk:path": "examples-prod-astro-stack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}